# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events for every branch
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - '*'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "test"
  test:
    name: Dub Tests
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
        dc: [dmd-latest]
        exclude:
          - { os: macOS-latest, dc: dmd-2.085.0 }

    # The type of runner that the job will run on
    runs-on: ${{ matrix.os }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Install D Compiler
        uses: dlang-community/setup-dlang@v1
        with:
          compiler: ${{ matrix.dc }}

      # Runs a set of commands using the runners shell
      - name: Run a Multi-Line Script
        run: |
          echo Check dub and dmd versions:
          dub --version
          dmd --version
          pwd

      ###
      ### Client:
      ###

      # Runs a single command using the runners shell
      - name: Check Client Formatting
        run: sh ./support/cicd_scripts/format.sh ./client

      - name: Generate Client Coverage
        working-directory: ./client
        run: dub -b cov

      - name: Check Client Coverage
        run: sh ./support/cicd_scripts/check_coverage.sh ./client

      - uses: actions/upload-artifact@v3
        with:
          name: Client Coverage
          path: ./client/coverage # or path/to/artifact

      - name: Perform Client Unit Tests
        working-directory: ./client
        run: dub run --build=unittest

      - name: Generate Client Docs
        run: sh ./support/cicd_scripts/generate_docs.sh ./client

      - uses: actions/upload-artifact@v3
        with:
          name: Client Docs
          path: ./client/docs # or path/to/artifact

      - name: Build Client Release Deliverable
        working-directory: ./client
        run: dub --build=release

      - uses: actions/upload-artifact@v3
        with:
          name: Client Release Deliverable
          path: ./client/bin/client.exe # or path/to/artifact

      ###
      ### Server:
      ###

      - name: Check Server Formatting
        run: sh ./support/cicd_scripts/format.sh ./server

      - name: Generate Server Coverage
        working-directory: ./server
        run: dub -b cov

      - name: Check Server Coverage
        run: sh ./support/cicd_scripts/check_coverage.sh ./server

      - uses: actions/upload-artifact@v3
        with:
          name: Server Coverage
          path: ./server/coverage # or path/to/artifact

      # Runs a single command using the runners shell
      - name: Perform Server Unit Tests
        working-directory: ./server
        run: dub run --build=unittest

      - name: Generate Server Docs
        run: sh ./support/cicd_scripts/generate_docs.sh ./server

      - uses: actions/upload-artifact@v3
        with:
          name: Server Docs
          path: ./server/docs # or path/to/artifact

      - name: Build Server Release Deliverable
        working-directory: ./server
        run: dub --build=release

      - uses: actions/upload-artifact@v3
        with:
          name: Server Release Deliverable
          path: ./server/bin/server.exe # or path/to/artifact



